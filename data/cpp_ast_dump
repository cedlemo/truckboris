TranslationUnitDecl 0x35dd150 <<invalid sloc>>
|-TypedefDecl 0x35dd690 <<invalid sloc>> __int128_t '__int128'
|-TypedefDecl 0x35dd6f0 <<invalid sloc>> __uint128_t 'unsigned __int128'
|-TypedefDecl 0x35ddab0 <<invalid sloc>> __builtin_va_list '__va_list_tag [1]'
|-CXXRecordDecl 0x35ddb00 <./test.h:3:1, line:5:1> struct ana definition
| |-CXXRecordDecl 0x35ddc10 <line:3:1, col:8> struct ana
| |-FieldDecl 0x35ddcb0 <line:4:3, col:7> touf 'int'
| |-CXXConstructorDecl 0x361c280 <line:3:8> ana 'void (void)' inline noexcept-unevaluated 0x361c280
| | `-CompoundStmt 0x361c750 <col:8>
| |-CXXConstructorDecl 0x361c3e0 <col:8> ana 'void (const struct ana &)' inline noexcept-unevaluated 0x361c3e0
| | `-ParmVarDecl 0x361c520 <col:8> 'const struct ana &'
| `-CXXConstructorDecl 0x361c5b0 <col:8> ana 'void (struct ana &&)' inline noexcept-unevaluated 0x361c5b0
|   `-ParmVarDecl 0x361c6f0 <col:8> 'struct ana &&'
|-VarDecl 0x35ddd50 <col:1, line:5:3> nas 'struct ana':'struct ana'
| `-CXXConstructExpr 0x361c768 <col:3> 'struct ana':'struct ana' 'void (void)'
|-CXXRecordDecl 0x361c7b0 <line:7:1, line:9:1> struct _geronimo definition
| |-CXXRecordDecl 0x361c8c0 <line:7:1, col:8> struct _geronimo
| `-FieldDecl 0x361c960 <line:8:3, col:10> b 'double'
|-CXXRecordDecl 0x361c9b0 <line:11:1, line:14:1> struct definition
| |-FieldDecl 0x361cb00 <line:12:3, col:10> titi 'char *'
| |-FieldDecl 0x361cb60 <line:13:3, col:9> y 'float'
| |-CXXConstructorDecl 0x361cc80 <line:11:1>  'void (void)' inline noexcept-unevaluated 0x361cc80
| | `-CompoundStmt 0x361d120 <col:1>
| |-CXXConstructorDecl 0x361cdb0 <col:1>  'void (const struct <anonymous at ./test.h:11:1> &)' inline noexcept-unevaluated 0x361cdb0
| | `-ParmVarDecl 0x361cef0 <col:1> 'const struct <anonymous at ./test.h:11:1> &'
| `-CXXConstructorDecl 0x361cf80 <col:1>  'void (struct <anonymous at ./test.h:11:1> &&)' inline noexcept-unevaluated 0x361cf80
|   `-ParmVarDecl 0x361d0c0 <col:1> 'struct <anonymous at ./test.h:11:1> &&'
|-VarDecl 0x361cc00 <col:1, line:14:3> pomme 'struct <anonymous struct at ./test.h:11:1>':'struct <anonymous at ./test.h:11:1>'
| `-CXXConstructExpr 0x361d138 <col:3> 'struct <anonymous struct at ./test.h:11:1>':'struct <anonymous at ./test.h:11:1>' 'void (void)'
|-TypedefDecl 0x361d190 <line:16:1, col:13> toto 'int'
|-CXXRecordDecl 0x361d1e0 <line:21:9, line:23:1> struct definition
| |-FieldDecl 0x362dc90 <line:22:3, col:8> z 'char'
| |-CXXConstructorDecl 0x362e5b0 <line:21:9>  'void (void)' inline noexcept-unevaluated 0x362e5b0
| | `-CompoundStmt 0x3631410 <col:9>
| |-CXXDestructorDecl 0x362e6d0 <col:9> ~ 'void (void)' inline noexcept-unevaluated 0x362e6d0
| |-CXXConstructorDecl 0x362e960 <col:9>  'void (const tomate &)' inline noexcept-unevaluated 0x362e960
| | `-ParmVarDecl 0x362eaa0 <col:9> 'const tomate &'
| `-CXXConstructorDecl 0x362eb30 <col:9>  'void (tomate &&)' inline noexcept-unevaluated 0x362eb30
|   `-ParmVarDecl 0x3630cd0 <col:9> 'tomate &&'
|-TypedefDecl 0x362dd30 <col:1, line:23:3> tomate 'struct tomate':'tomate'
|-CXXRecordDecl 0x362dd90 <line:25:1, line:28:1> struct _poire definition
| |-CXXRecordDecl 0x362dea0 <line:25:1, col:8> struct _poire
| |-FieldDecl 0x362df40 <line:26:3, col:7> g 'int'
| |-FieldDecl 0x362dfc0 <line:27:3, col:10> rouge 'tomate':'tomate'
| |-CXXConstructorDecl 0x362e490 <line:25:8> _poire 'void (void)' inline noexcept-unevaluated 0x362e490
| | |-CXXCtorInitializer Field 0x362dfc0 'rouge' 'tomate':'tomate'
| | | |-CXXConstructExpr 0x3631428 <col:8> 'tomate':'tomate' 'void (void)'
| | `-CompoundStmt 0x3631490 <col:8>
| |-CXXDestructorDecl 0x362e7e0 <col:8> ~_poire 'void (void)' inline noexcept-unevaluated 0x362e7e0
| |-CXXConstructorDecl 0x3630d30 <col:8> _poire 'void (const struct _poire &)' inline noexcept-unevaluated 0x3630d30
| | `-ParmVarDecl 0x3630e70 <col:8> 'const struct _poire &'
| `-CXXConstructorDecl 0x3630f00 <col:8> _poire 'void (struct _poire &&)' inline noexcept-unevaluated 0x3630f00
|   `-ParmVarDecl 0x3631040 <col:8> 'struct _poire &&'
|-TypedefDecl 0x362e060 <line:29:1, col:23> kudamono 'struct _poire':'struct _poire'
|-CXXRecordDecl 0x362e0b0 <line:31:1, line:34:1> struct definition
| |-FieldDecl 0x362e1d0 <line:32:3, col:7> zozo 'int'
| |-FieldDecl 0x362e250 <line:33:3, col:12> fruit 'kudamono':'struct _poire'
| |-CXXConstructorDecl 0x362e370 <line:31:1>  'void (void)' inline noexcept-unevaluated 0x362e370
| | |-CXXCtorInitializer Field 0x362e250 'fruit' 'kudamono':'struct _poire'
| | | |-CXXConstructExpr 0x36314a8 <col:1> 'kudamono':'struct _poire' 'void (void)'
| | `-CompoundStmt 0x3631510 <col:1>
| |-CXXConstructorDecl 0x36310a0 <col:1>  'void (const struct <anonymous at ./test.h:31:1> &)' inline noexcept-unevaluated 0x36310a0
| | `-ParmVarDecl 0x36311e0 <col:1> 'const struct <anonymous at ./test.h:31:1> &'
| `-CXXConstructorDecl 0x3631270 <col:1>  'void (struct <anonymous at ./test.h:31:1> &&)' inline noexcept-unevaluated 0x3631270
|   `-ParmVarDecl 0x36313b0 <col:1> 'struct <anonymous at ./test.h:31:1> &&'
|-VarDecl 0x362e2f0 <col:1, line:34:3> poney 'struct <anonymous struct at ./test.h:31:1>':'struct <anonymous at ./test.h:31:1>'
| `-CXXConstructExpr 0x3631528 <col:3> 'struct <anonymous struct at ./test.h:31:1>':'struct <anonymous at ./test.h:31:1>' 'void (void)'
|-CXXRecordDecl 0x3631570 <line:36:9, col:16> struct poney
|-TypedefDecl 0x3631670 <col:1, col:22> equide 'struct poney':'struct poney'
|-VarDecl 0x36316e0 <line:39:1, col:8> a 'int'
| `-IntegerLiteral 0x3631738 <col:8> 'int' 3
|-FunctionDecl 0x36318b0 <line:40:1, col:40> une_fonction 'void (int, double)'
| |-ParmVarDecl 0x3631770 <col:19, col:23> arg1 'int'
| `-ParmVarDecl 0x36317e0 <col:29, col:36> arg2 'double'
|-EnumDecl 0x3631960 <line:41:1, col:43> strategy
| |-EnumConstantDecl 0x3631a10 <col:17> RANDOM 'enum strategy'
| |-EnumConstantDecl 0x3631a60 <col:25> IMMEDIATE 'enum strategy'
| `-EnumConstantDecl 0x3631ab0 <col:36> SEARCH 'enum strategy'
|-VarDecl 0x3631b50 <line:42:1, col:29> my_strategy 'enum strategy':'enum strategy'
| `-DeclRefExpr 0x3631ba8 <col:29> 'enum strategy' EnumConstant 0x3631a60 'IMMEDIATE' 'enum strategy'
|-EnumDecl 0x3631d50 <line:43:9, col:58> pipete
| |-EnumConstantDecl 0x3631e00 <col:23> CANON 'enum pipete'
| |-EnumConstantDecl 0x3631e70 <col:30, col:38> FUSIL 'enum pipete'
| | `-ImplicitCastExpr 0x3631f60 <col:38> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x3631e50 <col:38> 'int' 3
| |-EnumConstantDecl 0x3631ec0 <col:41> ARC 'enum pipete'
| `-EnumConstantDecl 0x3631f10 <col:46> CANNEAPECHE 'enum pipete'
|-TypedefDecl 0x3631fd0 <col:1, col:60> aplume 'enum pipete':'enum pipete'
|-EnumDecl 0x3632030 <line:44:9, col:36>
| |-EnumConstantDecl 0x36320e0 <col:16> POLO 'baka'
| |-EnumConstantDecl 0x3632130 <col:22> MARCO 'baka'
| `-EnumConstantDecl 0x3632180 <col:29> NADINE 'baka'
|-TypedefDecl 0x3632220 <col:1, col:38> baka 'enum baka':'baka'
|-FunctionDecl 0x36324f0 <line:45:1, col:31> pupute 'void (tomate *, equide *)'
| |-ParmVarDecl 0x36322f0 <col:13, col:21> 'tomate *'
| `-ParmVarDecl 0x36323e0 <col:23, col:31> 'equide *'
|-CXXRecordDecl 0x36325a0 <line:46:1, line:51:1> union Data definition
| |-CXXRecordDecl 0x36326b0 <line:46:1, col:7> union Data
| |-FieldDecl 0x3632750 <line:48:4, col:8> i 'int'
| |-FieldDecl 0x36327b0 <line:49:4, col:10> f 'float'
| `-FieldDecl 0x3632880 <line:50:4, col:16> str 'char [20]'
|-FunctionDecl 0x36328f0 <test.cpp:3:1, line:5:1> fonction_vide 'void (void)'
| `-CompoundStmt 0x3632990 <line:4:1, line:5:1>
|-EmptyDecl 0x36329b0 <col:2>
`-FunctionDecl 0x3632b50 <line:6:1, line:10:1> main 'int (int, char **)'
  |-ParmVarDecl 0x36329e0 <line:6:10, col:14> argc 'int'
  |-ParmVarDecl 0x3632a80 <col:20, col:27> argv 'char **'
  `-CompoundStmt 0x3632ce0 <line:7:1, line:10:1>
    |-DeclStmt 0x3632c88 <line:8:3, col:12>
    | `-VarDecl 0x3632c10 <col:3, col:11> a 'int'
    |   `-IntegerLiteral 0x3632c68 <col:11> 'int' 3
    `-ReturnStmt 0x3632cc0 <line:9:3, col:10>
      `-IntegerLiteral 0x3632ca0 <col:10> 'int' 0
